{"ast":null,"code":"var _jsxFileName = \"/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/PostPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport CommentSection from './CommentSection';\nimport DOMPurify from 'dompurify';\nimport './css/PostPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = ({\n  user\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [recentPosts, setRecentPosts] = useState([]);\n  const [error, setError] = useState('');\n  const [totalPosts, setTotalPosts] = useState(0); // Total number of posts\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch the current post\n    fetch(`http://localhost:5000/api/posts/${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => setPost(data)).catch(error => setError(error.message));\n\n    // Fetch total post count to calculate navigation correctly\n    fetch(`http://localhost:5000/api/posts/count`).then(response => response.json()).then(count => setTotalPosts(count)).catch(error => console.error('Error fetching post count:', error));\n  }, [id]);\n\n  // Function to fetch 5 recent posts dynamically around a specific post\n  const fetchRecentPosts = async postId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/posts`);\n      const data = await response.json();\n      const postIndex = data.findIndex(post => post.id === parseInt(postId, 10));\n      if (postIndex === -1) return;\n\n      // Calculate start and end index to always display 5 posts\n      let startIndex = Math.max(0, postIndex - 2); // Shift left if possible\n      let endIndex = Math.min(totalPosts, startIndex + 5);\n      setRecentPosts(data.slice(startIndex, endIndex));\n    } catch (error) {\n      console.error('Error fetching recent posts:', error);\n    }\n  };\n\n  // Handle click on a recent post and update the recent posts list based on the clicked post\n  const handleRecentPostClick = postId => {\n    // Fetch 5 recent posts around the clicked post\n    fetchRecentPosts(postId);\n    navigate(`/post/${postId}`);\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 21\n  }, this);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-message\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back-arrow\",\n      onClick: () => navigate('/'),\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"sidebar-title\",\n          children: \"Recent Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"recent-posts-list\",\n          children: recentPosts.map(recentPost => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: recentPost.id === post.id ? 'active recent-post-item' : 'recent-post-item',\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/post/${recentPost.id}`,\n              className: \"recent-post-link\",\n              onClick: () => handleRecentPostClick(recentPost.id),\n              children: recentPost.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, recentPost.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-category\",\n          children: post.category && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"post-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-date\",\n          children: new Date(post.createdAt).toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"view-count\",\n          children: [\"\\uD83D\\uDC41 \", post.readCount || 0, \" views\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.imageUrl,\n            alt: post.title,\n            className: \"post-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: DOMPurify.sanitize(post.content)\n          },\n          className: \"post-text-content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentSection, {\n          postId: id,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"TEIStq/fyUZjkUW/rfyG8JBV8UU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","useNavigate","CommentSection","DOMPurify","jsxDEV","_jsxDEV","PostPage","user","_s","id","post","setPost","recentPosts","setRecentPosts","error","setError","totalPosts","setTotalPosts","navigate","fetch","then","response","ok","Error","status","json","data","catch","message","count","console","fetchRecentPosts","postId","postIndex","findIndex","parseInt","startIndex","Math","max","endIndex","min","slice","handleRecentPostClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","recentPost","to","title","category","Date","createdAt","toLocaleDateString","year","month","day","hour","minute","readCount","imageUrl","src","alt","dangerouslySetInnerHTML","__html","sanitize","content","_c","$RefreshReg$"],"sources":["/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/PostPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport CommentSection from './CommentSection';\nimport DOMPurify from 'dompurify';\nimport './css/PostPage.css';\n\nconst PostPage = ({ user }) => {\n  const { id } = useParams();\n  const [post, setPost] = useState(null);\n  const [recentPosts, setRecentPosts] = useState([]);\n  const [error, setError] = useState('');\n  const [totalPosts, setTotalPosts] = useState(0); // Total number of posts\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Fetch the current post\n    fetch(`http://localhost:5000/api/posts/${id}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => setPost(data))\n      .catch((error) => setError(error.message));\n\n    // Fetch total post count to calculate navigation correctly\n    fetch(`http://localhost:5000/api/posts/count`)\n    .then((response) => response.json())\n    .then((count) => setTotalPosts(count))\n    .catch((error) => console.error('Error fetching post count:', error));\n\n  }, [id]);\n\n  // Function to fetch 5 recent posts dynamically around a specific post\n  const fetchRecentPosts = async (postId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/posts`);\n      const data = await response.json();\n      const postIndex = data.findIndex(post => post.id === parseInt(postId, 10));\n      \n      if (postIndex === -1) return;\n\n      // Calculate start and end index to always display 5 posts\n      let startIndex = Math.max(0, postIndex - 2); // Shift left if possible\n      let endIndex = Math.min(totalPosts, startIndex + 5);\n\n      setRecentPosts(data.slice(startIndex, endIndex));\n    } catch (error) {\n      console.error('Error fetching recent posts:', error);\n    }\n  };\n\n  // Handle click on a recent post and update the recent posts list based on the clicked post\n  const handleRecentPostClick = (postId) => {\n    // Fetch 5 recent posts around the clicked post\n    fetchRecentPosts(postId);\n    navigate(`/post/${postId}`);\n  };\n\n  if (error) return <div className=\"error-message\">{error}</div>;\n  if (!post) return <div className=\"loading-message\">Loading...</div>;\n\n  return (\n    <div className=\"post-page-container\">\n      <div className=\"back-arrow\" onClick={() => navigate('/')}>\n        ← Back\n      </div>\n\n      <div className=\"post-page\">\n        <aside className=\"sidebar\">\n          <h2 className=\"sidebar-title\">Recent Posts</h2>\n          <ul className=\"recent-posts-list\">\n            {recentPosts.map((recentPost) => (\n              <li\n                key={recentPost.id}\n                className={\n                  recentPost.id === post.id ? 'active recent-post-item' : 'recent-post-item'\n                }\n              >\n                <Link\n                  to={`/post/${recentPost.id}`}\n                  className=\"recent-post-link\"\n                  onClick={() => handleRecentPostClick(recentPost.id)}\n                >\n                  {recentPost.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </aside>\n\n        <div className=\"post-content\">\n          <div className=\"post-category\">\n            {post.category && <p>{post.category}</p>}\n          </div>\n          <h1 className=\"post-title\">{post.title}</h1>\n          <p className=\"post-date\">\n            {new Date(post.createdAt).toLocaleDateString('en-US', {\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric',\n              hour: '2-digit',\n              minute: '2-digit',\n            })}\n          </p>\n          <p className=\"view-count\">👁 {post.readCount || 0} views</p>\n          {post.imageUrl && (\n            <div className=\"post-image-container\">\n              <img src={post.imageUrl} alt={post.title} className=\"post-image\" />\n            </div>\n          )}\n          <div\n            dangerouslySetInnerHTML={{\n              __html: DOMPurify.sanitize(post.content),\n            }}\n            className=\"post-text-content\"\n          />\n          <CommentSection postId={id} user={user} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAC/D,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,MAAMoB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACd;IACAsB,KAAK,CAAC,mCAAmCV,EAAE,EAAE,CAAC,CAC3CW,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC;MAC3D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAKf,OAAO,CAACe,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEb,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAACc,OAAO,CAAC,CAAC;;IAE5C;IACAT,KAAK,CAAC,uCAAuC,CAAC,CAC7CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CACnCL,IAAI,CAAES,KAAK,IAAKZ,aAAa,CAACY,KAAK,CAAC,CAAC,CACrCF,KAAK,CAAEb,KAAK,IAAKgB,OAAO,CAAChB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EAEvE,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;;EAER;EACA,MAAMsB,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMF,KAAK,CAAC,iCAAiC,CAAC;MAC/D,MAAMO,IAAI,GAAG,MAAML,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,MAAMQ,SAAS,GAAGP,IAAI,CAACQ,SAAS,CAACxB,IAAI,IAAIA,IAAI,CAACD,EAAE,KAAK0B,QAAQ,CAACH,MAAM,EAAE,EAAE,CAAC,CAAC;MAE1E,IAAIC,SAAS,KAAK,CAAC,CAAC,EAAE;;MAEtB;MACA,IAAIG,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;MAC7C,IAAIM,QAAQ,GAAGF,IAAI,CAACG,GAAG,CAACxB,UAAU,EAAEoB,UAAU,GAAG,CAAC,CAAC;MAEnDvB,cAAc,CAACa,IAAI,CAACe,KAAK,CAACL,UAAU,EAAEG,QAAQ,CAAC,CAAC;IAClD,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACdgB,OAAO,CAAChB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;;EAED;EACA,MAAM4B,qBAAqB,GAAIV,MAAM,IAAK;IACxC;IACAD,gBAAgB,CAACC,MAAM,CAAC;IACxBd,QAAQ,CAAC,SAASc,MAAM,EAAE,CAAC;EAC7B,CAAC;EAED,IAAIlB,KAAK,EAAE,oBAAOT,OAAA;IAAKsC,SAAS,EAAC,eAAe;IAAAC,QAAA,EAAE9B;EAAK;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAC9D,IAAI,CAACtC,IAAI,EAAE,oBAAOL,OAAA;IAAKsC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEnE,oBACE3C,OAAA;IAAKsC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCvC,OAAA;MAAKsC,SAAS,EAAC,YAAY;MAACM,OAAO,EAAEA,CAAA,KAAM/B,QAAQ,CAAC,GAAG,CAAE;MAAA0B,QAAA,EAAC;IAE1D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEN3C,OAAA;MAAKsC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBvC,OAAA;QAAOsC,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACxBvC,OAAA;UAAIsC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/C3C,OAAA;UAAIsC,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAC9BhC,WAAW,CAACsC,GAAG,CAAEC,UAAU,iBAC1B9C,OAAA;YAEEsC,SAAS,EACPQ,UAAU,CAAC1C,EAAE,KAAKC,IAAI,CAACD,EAAE,GAAG,yBAAyB,GAAG,kBACzD;YAAAmC,QAAA,eAEDvC,OAAA,CAACL,IAAI;cACHoD,EAAE,EAAE,SAASD,UAAU,CAAC1C,EAAE,EAAG;cAC7BkC,SAAS,EAAC,kBAAkB;cAC5BM,OAAO,EAAEA,CAAA,KAAMP,qBAAqB,CAACS,UAAU,CAAC1C,EAAE,CAAE;cAAAmC,QAAA,EAEnDO,UAAU,CAACE;YAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb;UAAC,GAXFG,UAAU,CAAC1C,EAAE;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYhB,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAER3C,OAAA;QAAKsC,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BvC,OAAA;UAAKsC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC3BlC,IAAI,CAAC4C,QAAQ,iBAAIjD,OAAA;YAAAuC,QAAA,EAAIlC,IAAI,CAAC4C;UAAQ;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,eACN3C,OAAA;UAAIsC,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAElC,IAAI,CAAC2C;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5C3C,OAAA;UAAGsC,SAAS,EAAC,WAAW;UAAAC,QAAA,EACrB,IAAIW,IAAI,CAAC7C,IAAI,CAAC8C,SAAS,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;YACpDC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,MAAM;YACbC,GAAG,EAAE,SAAS;YACdC,IAAI,EAAE,SAAS;YACfC,MAAM,EAAE;UACV,CAAC;QAAC;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACJ3C,OAAA;UAAGsC,SAAS,EAAC,YAAY;UAAAC,QAAA,GAAC,eAAG,EAAClC,IAAI,CAACqD,SAAS,IAAI,CAAC,EAAC,QAAM;QAAA;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EAC3DtC,IAAI,CAACsD,QAAQ,iBACZ3D,OAAA;UAAKsC,SAAS,EAAC,sBAAsB;UAAAC,QAAA,eACnCvC,OAAA;YAAK4D,GAAG,EAAEvD,IAAI,CAACsD,QAAS;YAACE,GAAG,EAAExD,IAAI,CAAC2C,KAAM;YAACV,SAAS,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CACN,eACD3C,OAAA;UACE8D,uBAAuB,EAAE;YACvBC,MAAM,EAAEjE,SAAS,CAACkE,QAAQ,CAAC3D,IAAI,CAAC4D,OAAO;UACzC,CAAE;UACF3B,SAAS,EAAC;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACF3C,OAAA,CAACH,cAAc;UAAC8B,MAAM,EAAEvB,EAAG;UAACF,IAAI,EAAEA;QAAK;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxC,EAAA,CArHIF,QAAQ;EAAA,QACGP,SAAS,EAKPE,WAAW;AAAA;AAAAsE,EAAA,GANxBjE,QAAQ;AAuHd,eAAeA,QAAQ;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}