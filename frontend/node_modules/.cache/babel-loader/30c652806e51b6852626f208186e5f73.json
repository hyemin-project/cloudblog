{"ast":null,"code":"var _jsxFileName = \"/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport CommentItem from './CommentItem';\nimport './css/CommentSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Update with your backend URL\n\nconst CommentSection = ({\n  postId,\n  user\n}) => {\n  _s();\n  var _user$user;\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const userId = (user === null || user === void 0 ? void 0 : (_user$user = user.user) === null || _user$user === void 0 ? void 0 : _user$user.userId) || null;\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/comments/${postId}?userId=${userId}`);\n        const data = await response.json();\n        const processedComments = data.map(comment => ({\n          ...comment,\n          likedUsers: Array.isArray(comment.likedUsers) ? comment.likedUsers : [],\n          isLikedByCurrentUser: comment.isLikedByCurrentUser,\n          replies: comment.replies ? comment.replies.map(reply => ({\n            ...reply,\n            likedUsers: Array.isArray(reply.likedUsers) ? reply.likedUsers : [],\n            isLikedByCurrentUser: reply.isLikedByCurrentUser\n          })) : []\n        }));\n        setComments(processedComments);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchComments();\n    socket.emit('joinPost', postId);\n\n    // Listen for like updates\n    socket.on('updateLike', ({\n      commentId,\n      likeCount\n    }) => {\n      setComments(prevComments => prevComments.map(comment => comment.id === commentId ? {\n        ...comment,\n        likeCount\n      } // Update like count\n      : {\n        ...comment,\n        replies: comment.replies.map(reply => reply.id === commentId ? {\n          ...reply,\n          likeCount\n        } : reply)\n      }));\n    });\n    return () => {\n      socket.emit('leavePost', postId);\n      socket.off('updateLike');\n    };\n  }, [postId, userId]);\n  const handleLike = (commentId, isLiked) => {\n    if (!userId) {\n      alert('Please log in to like a comment.');\n      return;\n    }\n    socket.emit('likeComment', {\n      commentId,\n      isLiked,\n      userId\n    });\n    setComments(prevComments => prevComments.map(comment => comment.id === commentId ? {\n      ...comment,\n      likeCount: isLiked ? comment.likeCount - 1 : comment.likeCount + 1,\n      likedUsers: isLiked ? comment.likedUsers.filter(id => id !== userId) : [...comment.likedUsers, userId],\n      isLikedByCurrentUser: !isLiked\n    } : {\n      ...comment,\n      replies: comment.replies.map(reply => reply.id === commentId ? {\n        ...reply,\n        likeCount: isLiked ? reply.likeCount - 1 : reply.likeCount + 1,\n        likedUsers: isLiked ? reply.likedUsers.filter(id => id !== userId) : [...reply.likedUsers, userId],\n        isLikedByCurrentUser: !isLiked\n      } : reply)\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.length > 0 ? comments.map((comment, index) => /*#__PURE__*/_jsxDEV(CommentItem, {\n        comment: comment,\n        onReply: handleReply,\n        onLike: handleLike,\n        user: user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"MxCDS9ewhkO9e8lz5YjyzEXdntQ=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","io","CommentItem","jsxDEV","_jsxDEV","socket","CommentSection","postId","user","_s","_user$user","comments","setComments","newComment","setNewComment","userId","fetchComments","response","fetch","data","json","processedComments","map","comment","likedUsers","Array","isArray","isLikedByCurrentUser","replies","reply","error","console","emit","on","commentId","likeCount","prevComments","id","off","handleLike","isLiked","alert","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","onReply","handleReply","onLike","_c","$RefreshReg$"],"sources":["/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport CommentItem from './CommentItem';\nimport './css/CommentSection.css';\n\nconst socket = io('http://localhost:5000'); // Update with your backend URL\n\nconst CommentSection = ({ postId, user }) => {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n\n  const userId = user?.user?.userId || null;\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/comments/${postId}?userId=${userId}`);\n        const data = await response.json();\n\n        const processedComments = data.map(comment => ({\n          ...comment,\n          likedUsers: Array.isArray(comment.likedUsers) ? comment.likedUsers : [],\n          isLikedByCurrentUser: comment.isLikedByCurrentUser,\n          replies: comment.replies ? comment.replies.map(reply => ({\n            ...reply,\n            likedUsers: Array.isArray(reply.likedUsers) ? reply.likedUsers : [],\n            isLikedByCurrentUser: reply.isLikedByCurrentUser,\n          })) : []\n        }));\n\n        setComments(processedComments);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n\n    fetchComments();\n\n    socket.emit('joinPost', postId);\n\n    // Listen for like updates\n    socket.on('updateLike', ({ commentId, likeCount }) => {\n      setComments(prevComments =>\n        prevComments.map(comment =>\n          comment.id === commentId\n            ? { ...comment, likeCount } // Update like count\n            : {\n                ...comment,\n                replies: comment.replies.map(reply =>\n                  reply.id === commentId ? { ...reply, likeCount } : reply\n                ),\n              }\n        )\n      );\n    });\n\n    return () => {\n      socket.emit('leavePost', postId);\n      socket.off('updateLike');\n    };\n  }, [postId, userId]);\n\n  const handleLike = (commentId, isLiked) => {\n    if (!userId) {\n      alert('Please log in to like a comment.');\n      return;\n    }\n\n    socket.emit('likeComment', { commentId, isLiked, userId });\n\n    setComments(prevComments =>\n      prevComments.map(comment =>\n        comment.id === commentId\n          ? {\n              ...comment,\n              likeCount: isLiked ? comment.likeCount - 1 : comment.likeCount + 1,\n              likedUsers: isLiked\n                ? comment.likedUsers.filter(id => id !== userId)\n                : [...comment.likedUsers, userId],\n              isLikedByCurrentUser: !isLiked,\n            }\n          : {\n              ...comment,\n              replies: comment.replies.map(reply =>\n                reply.id === commentId\n                  ? {\n                      ...reply,\n                      likeCount: isLiked ? reply.likeCount - 1 : reply.likeCount + 1,\n                      likedUsers: isLiked\n                        ? reply.likedUsers.filter(id => id !== userId)\n                        : [...reply.likedUsers, userId],\n                      isLikedByCurrentUser: !isLiked,\n                    }\n                  : reply\n              ),\n            }\n      )\n    );\n  };\n\n  return (\n    <div className=\"comment-section\">\n      <h2>Comments</h2>\n      <ul>\n        {comments.length > 0 ? (\n          comments.map((comment, index) => (\n            <CommentItem\n              key={index}\n              comment={comment}\n              onReply={handleReply}\n              onLike={handleLike}\n              user={user}\n            />\n          ))\n        ) : (\n          <p>No comments available.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default CommentSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}