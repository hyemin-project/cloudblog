{"ast":null,"code":"var _jsxFileName = \"/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/PostList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = ({\n  selectedCategory,\n  searchTerm,\n  user\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchPosts();\n  }, [selectedCategory, searchTerm]); // Refetch when category or searchTerm changes\n\n  const fetchPosts = async () => {\n    try {\n      let url = 'http://localhost:5000/api/posts';\n      if (searchTerm) {\n        // If a search term is provided, use the search endpoint\n        url = `http://localhost:5000/api/posts/search?searchTerm=${encodeURIComponent(searchTerm)}`;\n      } else if (selectedCategory) {\n        // Filter by category if no search term\n        url += `?category=${encodeURIComponent(selectedCategory)}`;\n      }\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Fetched posts:', data);\n      const publishedPosts = data.filter(post => post.status === 'Published');\n      setPosts(publishedPosts);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleReadMoreClick = (postId, postTitle) => {\n    navigate(`/post/${postId}`);\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-posts\",\n      children: \"No posts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [post.image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.image,\n          alt: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"post-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-date\",\n          children: new Date(post.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), post.excerpt && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-excerpt\",\n          children: post.excerpt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"view-count\",\n            children: [\"\\uD83D\\uDC41 \", post.readCount || 0, \" views\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"read-more-btn\",\n            onClick: () => handleReadMoreClick(post.id, post.title),\n            children: \"Read More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"v8RWKG6kzWafCBJ/eQX0QgU5GZs=\", false, function () {\n  return [useNavigate];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","PostList","selectedCategory","searchTerm","user","_s","posts","setPosts","error","setError","isLoading","setIsLoading","navigate","fetchPosts","url","encodeURIComponent","response","fetch","ok","Error","status","data","json","console","log","publishedPosts","filter","post","message","handleReadMoreClick","postId","postTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","image","src","alt","title","Date","createdAt","toLocaleString","excerpt","readCount","onClick","id","_c","$RefreshReg$"],"sources":["/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/PostList.css';\n\nconst PostList = ({ selectedCategory, searchTerm, user }) => {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchPosts();\n  }, [selectedCategory, searchTerm]);  // Refetch when category or searchTerm changes\n\n  const fetchPosts = async () => {\n    try {\n      let url = 'http://localhost:5000/api/posts';\n\n      if (searchTerm) {\n        // If a search term is provided, use the search endpoint\n        url = `http://localhost:5000/api/posts/search?searchTerm=${encodeURIComponent(searchTerm)}`;\n      } else if (selectedCategory) {\n        // Filter by category if no search term\n        url += `?category=${encodeURIComponent(selectedCategory)}`;\n      }\n\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Fetched posts:', data);\n\n      const publishedPosts = data.filter(post => post.status === 'Published');\n      setPosts(publishedPosts);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleReadMoreClick = (postId, postTitle) => {\n    navigate(`/post/${postId}`);\n  };\n\n  if (isLoading) return <div className=\"loading\">Loading...</div>;\n  if (error) return <div className=\"error\">Error: {error}</div>;\n\n  return (\n    <div className=\"post-list\">\n      {posts.length === 0 ? (\n        <p className=\"no-posts\">No posts found.</p>\n      ) : (\n        posts.map((post) => (\n          <div key={post.id} className=\"post-card\">\n            {post.image && (\n              <div className=\"post-image\">\n                <img src={post.image} alt={post.title} />\n              </div>\n            )}\n            <div className=\"post-content\">\n              <h3 className=\"post-title\">{post.title}</h3>\n              <p className=\"post-date\">{new Date(post.createdAt).toLocaleString()}</p>\n              {post.excerpt && <p className=\"post-excerpt\">{post.excerpt}</p>}\n              <div className=\"post-footer\">\n                <span className=\"view-count\">üëÅ {post.readCount || 0} views</span>\n                <button \n                  className=\"read-more-btn\"\n                  onClick={() => handleReadMoreClick(post.id, post.title)}\n                >\n                  Read More\n                </button>\n              </div>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}