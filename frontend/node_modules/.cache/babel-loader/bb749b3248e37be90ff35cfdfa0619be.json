{"ast":null,"code":"var _jsxFileName = \"/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport CommentItem from './CommentItem';\nimport './css/CommentSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Update with your backend URL\n\nconst CommentSection = ({\n  postId,\n  user\n}) => {\n  _s();\n  var _user$user;\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const userId = (user === null || user === void 0 ? void 0 : (_user$user = user.user) === null || _user$user === void 0 ? void 0 : _user$user.userId) || null;\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/comments/${postId}`);\n        const data = await response.json();\n\n        // Process each comment and ensure likedUsers and replies are arrays\n        const processedComments = data.map(comment => ({\n          ...comment,\n          likedUsers: Array.isArray(comment.likedUsers) ? comment.likedUsers : [],\n          // Ensure likedUsers is an array\n          replies: comment.replies.map(reply => ({\n            ...reply,\n            likedUsers: Array.isArray(reply.likedUsers) ? reply.likedUsers : [] // Ensure likedUsers in replies is an array\n          })) || [] // Ensure replies is an array\n        }));\n        setComments(processedComments);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchComments();\n    socket.emit('joinPost', postId);\n    socket.on('newComment', comment => {\n      comment.likedUsers = Array.isArray(comment.likedUsers) ? comment.likedUsers : [];\n      setComments(prevComments => {\n        if (comment.parentId) {\n          return prevComments.map(parentComment => parentComment.id === comment.parentId ? {\n            ...parentComment,\n            replies: [...parentComment.replies, comment]\n          } : parentComment);\n        }\n        return [...prevComments, comment];\n      });\n    });\n    socket.on('updateLike', updatedComment => {\n      setComments(prevComments => {\n        return prevComments.map(comment => {\n          if (comment.id === updatedComment.id) {\n            return updatedComment;\n          }\n          const updatedReplies = comment.replies.map(reply => reply.id === updatedComment.id ? updatedComment : reply);\n          return {\n            ...comment,\n            replies: updatedReplies\n          };\n        });\n      });\n    });\n    return () => {\n      socket.emit('leavePost', postId);\n      socket.off('newComment');\n      socket.off('updateLike');\n    };\n  }, [postId]);\n  const handleCommentSubmit = (e, parentId = null) => {\n    e.preventDefault();\n    if (newComment.trim()) {\n      socket.emit('createComment', {\n        postId,\n        content: newComment,\n        parentId: parentId || null,\n        userId\n      });\n      setNewComment('');\n    }\n  };\n  const handleReply = (parentId, replyText) => {\n    if (replyText.trim()) {\n      socket.emit('createComment', {\n        postId,\n        content: replyText,\n        parentId,\n        userId\n      });\n    }\n  };\n  const handleLike = (commentId, isLiked) => {\n    if (!userId) {\n      alert('Please log in to like a comment.');\n      return;\n    }\n    console.log(`Toggling like for comment ${commentId}, isLiked: ${isLiked}`);\n    socket.emit('likeComment', {\n      commentId,\n      isLiked,\n      userId\n    });\n    setComments(prevComments => prevComments.map(comment => {\n      if (comment.id === commentId) {\n        const updatedLikes = isLiked ? comment.likes - 1 : comment.likes + 1;\n        const updatedLikedUsers = isLiked ? comment.likedUsers.filter(id => id !== userId) : [...comment.likedUsers, userId];\n        console.log(`Updated likes: ${updatedLikes}, likedUsers: ${updatedLikedUsers}`);\n        return {\n          ...comment,\n          likes: updatedLikes,\n          likedUsers: updatedLikedUsers\n        };\n      }\n      const updatedReplies = comment.replies.map(reply => reply.id === commentId ? {\n        ...reply,\n        likes: isLiked ? reply.likes - 1 : reply.likes + 1,\n        likedUsers: isLiked ? reply.likedUsers.filter(id => id !== userId) : [...reply.likedUsers, userId]\n      } : reply);\n      return {\n        ...comment,\n        replies: updatedReplies\n      };\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.length > 0 ? comments.map((comment, index) => /*#__PURE__*/_jsxDEV(CommentItem, {\n        comment: comment,\n        onReply: handleReply,\n        onLike: handleLike,\n        user: user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Write a comment...\",\n        disabled: !userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !userId,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"MxCDS9ewhkO9e8lz5YjyzEXdntQ=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","io","CommentItem","jsxDEV","_jsxDEV","socket","CommentSection","postId","user","_s","_user$user","comments","setComments","newComment","setNewComment","userId","fetchComments","response","fetch","data","json","processedComments","map","comment","likedUsers","Array","isArray","replies","reply","error","console","emit","on","prevComments","parentId","parentComment","id","updatedComment","updatedReplies","off","handleCommentSubmit","e","preventDefault","trim","content","handleReply","replyText","handleLike","commentId","isLiked","alert","log","updatedLikes","likes","updatedLikedUsers","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","onReply","onLike","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport CommentItem from './CommentItem';\nimport './css/CommentSection.css';\n\nconst socket = io('http://localhost:5000'); // Update with your backend URL\n\nconst CommentSection = ({ postId, user }) => {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n\n  const userId = user?.user?.userId || null;\n\n  useEffect(() => {\n    const fetchComments = async () => {\n  try {\n    const response = await fetch(`http://localhost:5000/api/comments/${postId}`);\n    const data = await response.json();\n\n    // Process each comment and ensure likedUsers and replies are arrays\n    const processedComments = data.map(comment => ({\n      ...comment,\n      likedUsers: Array.isArray(comment.likedUsers) ? comment.likedUsers : [], // Ensure likedUsers is an array\n      replies: comment.replies.map(reply => ({\n        ...reply,\n        likedUsers: Array.isArray(reply.likedUsers) ? reply.likedUsers : [] // Ensure likedUsers in replies is an array\n      })) || []  // Ensure replies is an array\n    }));\n\n    setComments(processedComments);\n  } catch (error) {\n    console.error('Error fetching comments:', error);\n  }\n};\n\n    \n    \n    fetchComments();\n\n    socket.emit('joinPost', postId);\n\n    socket.on('newComment', (comment) => {\n      comment.likedUsers = Array.isArray(comment.likedUsers) ? comment.likedUsers : [];\n\n      setComments((prevComments) => {\n        if (comment.parentId) {\n          return prevComments.map(parentComment =>\n            parentComment.id === comment.parentId\n              ? { ...parentComment, replies: [...parentComment.replies, comment] }\n              : parentComment\n          );\n        }\n        return [...prevComments, comment];\n      });\n    });\n\n    socket.on('updateLike', (updatedComment) => {\n      setComments((prevComments) => {\n        return prevComments.map(comment => {\n          if (comment.id === updatedComment.id) {\n            return updatedComment;\n          }\n\n          const updatedReplies = comment.replies.map(reply =>\n            reply.id === updatedComment.id ? updatedComment : reply\n          );\n          return { ...comment, replies: updatedReplies };\n        });\n      });\n    });\n\n    return () => {\n      socket.emit('leavePost', postId);\n      socket.off('newComment');\n      socket.off('updateLike');\n    };\n  }, [postId]);\n\n  const handleCommentSubmit = (e, parentId = null) => {\n    e.preventDefault();\n\n    if (newComment.trim()) {\n      socket.emit('createComment', {\n        postId,\n        content: newComment,\n        parentId: parentId || null,\n        userId\n      });\n\n      setNewComment('');\n    }\n  };\n\n  const handleReply = (parentId, replyText) => {\n    if (replyText.trim()) {\n      socket.emit('createComment', {\n        postId,\n        content: replyText,\n        parentId,\n        userId\n      });\n    }\n  };\n\n  const handleLike = (commentId, isLiked) => {\n    if (!userId) {\n      alert('Please log in to like a comment.');\n      return;\n    }\n\n    console.log(`Toggling like for comment ${commentId}, isLiked: ${isLiked}`);\n    \n    socket.emit('likeComment', { commentId, isLiked, userId });\n\n    setComments((prevComments) =>\n      prevComments.map((comment) => {\n        if (comment.id === commentId) {\n          const updatedLikes = isLiked ? comment.likes - 1 : comment.likes + 1;\n          const updatedLikedUsers = isLiked\n            ? comment.likedUsers.filter((id) => id !== userId)\n            : [...comment.likedUsers, userId];\n\n          console.log(`Updated likes: ${updatedLikes}, likedUsers: ${updatedLikedUsers}`);\n          \n          return {\n            ...comment,\n            likes: updatedLikes,\n            likedUsers: updatedLikedUsers,\n          };\n        }\n\n        const updatedReplies = comment.replies.map((reply) =>\n          reply.id === commentId\n            ? {\n                ...reply,\n                likes: isLiked ? reply.likes - 1 : reply.likes + 1,\n                likedUsers: isLiked\n                  ? reply.likedUsers.filter((id) => id !== userId)\n                  : [...reply.likedUsers, userId],\n              }\n            : reply\n        );\n        return { ...comment, replies: updatedReplies };\n      })\n    );\n  };\n\n  return (\n    <div className=\"comment-section\">\n      <h2>Comments</h2>\n      <ul>\n        {comments.length > 0 ? (\n          comments.map((comment, index) => (\n            <CommentItem\n              key={index}\n              comment={comment}\n              onReply={handleReply}\n              onLike={handleLike}\n              user={user}\n            />\n          ))\n        ) : (\n          <p>No comments available.</p>\n        )}\n      </ul>\n      <form onSubmit={handleCommentSubmit}>\n        <input\n          type=\"text\"\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n          placeholder=\"Write a comment...\"\n          disabled={!userId}\n        />\n        <button type=\"submit\" disabled={!userId}>Post</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}