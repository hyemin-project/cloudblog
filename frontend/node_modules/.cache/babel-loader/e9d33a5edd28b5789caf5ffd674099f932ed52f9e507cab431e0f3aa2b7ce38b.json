{"ast":null,"code":"var _jsxFileName = \"/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/PostList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/posts');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Fetched posts:', data);\n      const publishedPosts = data.filter(post => post.status === 'Published');\n      setPosts(publishedPosts);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleReadMoreClick = (postId, postTitle) => {\n    console.log(`Navigating to post ID: ${postId}, Title: ${postTitle}`);\n    navigate(`/post/${postId}`);\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-posts\",\n      children: \"No posts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"post-title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-date\",\n        children: new Date(post.createdAt).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"read-more-btn\",\n        onClick: () => handleReadMoreClick(post.id, post.title),\n        children: \"Read More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"v8RWKG6kzWafCBJ/eQX0QgU5GZs=\", false, function () {\n  return [useNavigate];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","error","setError","isLoading","setIsLoading","navigate","fetchPosts","response","fetch","ok","Error","status","data","json","console","log","publishedPosts","filter","post","message","handleReadMoreClick","postId","postTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","Date","createdAt","toLocaleString","onClick","id","_c","$RefreshReg$"],"sources":["/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './css/PostList.css';\n\nconst PostList = () => {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/posts');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Fetched posts:', data);\n      const publishedPosts = data.filter(post => post.status === 'Published');\n      setPosts(publishedPosts);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleReadMoreClick = (postId, postTitle) => {\n    console.log(`Navigating to post ID: ${postId}, Title: ${postTitle}`);\n    navigate(`/post/${postId}`);\n  };\n\n  if (isLoading) return <div className=\"loading\">Loading...</div>;\n  if (error) return <div className=\"error\">Error: {error}</div>;\n\n  return (\n    <div className=\"post-list\">\n      {posts.length === 0 ? (\n        <p className=\"no-posts\">No posts found.</p>\n      ) : (\n        posts.map((post) => (\n          <div key={post.id} className=\"post-card\">\n            <h3 className=\"post-title\">{post.title}</h3>\n            <p className=\"post-date\">{new Date(post.createdAt).toLocaleString()}</p>\n            <button \n              className=\"read-more-btn\"\n              onClick={() => handleReadMoreClick(post.id, post.title)}\n            >\n              Read More\n            </button>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PostList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,IAAI,CAAC;MACnC,MAAMI,cAAc,GAAGJ,IAAI,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACP,MAAM,KAAK,WAAW,CAAC;MACvEX,QAAQ,CAACgB,cAAc,CAAC;IAC1B,CAAC,CAAC,OAAOf,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CC,QAAQ,CAACD,KAAK,CAACkB,OAAO,CAAC;IACzB,CAAC,SAAS;MACRf,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMgB,mBAAmB,GAAGA,CAACC,MAAM,EAAEC,SAAS,KAAK;IACjDR,OAAO,CAACC,GAAG,CAAC,0BAA0BM,MAAM,YAAYC,SAAS,EAAE,CAAC;IACpEjB,QAAQ,CAAC,SAASgB,MAAM,EAAE,CAAC;EAC7B,CAAC;EAED,IAAIlB,SAAS,EAAE,oBAAOP,OAAA;IAAK2B,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC/D,IAAI3B,KAAK,EAAE,oBAAOL,OAAA;IAAK2B,SAAS,EAAC,OAAO;IAAAC,QAAA,GAAC,SAAO,EAACvB,KAAK;EAAA;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE7D,oBACEhC,OAAA;IAAK2B,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBzB,KAAK,CAAC8B,MAAM,KAAK,CAAC,gBACjBjC,OAAA;MAAG2B,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAE3C7B,KAAK,CAAC+B,GAAG,CAAEZ,IAAI,iBACbtB,OAAA;MAAmB2B,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtC5B,OAAA;QAAI2B,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEN,IAAI,CAACa;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5ChC,OAAA;QAAG2B,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAE,IAAIQ,IAAI,CAACd,IAAI,CAACe,SAAS,CAAC,CAACC,cAAc,CAAC;MAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxEhC,OAAA;QACE2B,SAAS,EAAC,eAAe;QACzBY,OAAO,EAAEA,CAAA,KAAMf,mBAAmB,CAACF,IAAI,CAACkB,EAAE,EAAElB,IAAI,CAACa,KAAK,CAAE;QAAAP,QAAA,EACzD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GARDV,IAAI,CAACkB,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASZ,CACN;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAxDID,QAAQ;EAAA,QAIKH,WAAW;AAAA;AAAA2C,EAAA,GAJxBxC,QAAQ;AA0Dd,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}