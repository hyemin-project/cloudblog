{"ast":null,"code":"var _jsxFileName = \"/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/CommentSection.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// CommentSection.js\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './css/CommentSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Update with your backend URL\n\nconst CommentSection = ({\n  postId,\n  user\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/comments/${postId}`);\n        const data = await response.json();\n        setComments(data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchComments();\n\n    // Join the post room\n    socket.emit('joinPost', postId);\n\n    // Listen for new comments from the server\n    socket.on('newComment', comment => {\n      setComments(prevComments => [...prevComments, comment]);\n    });\n\n    // Cleanup on unmount\n    return () => {\n      socket.emit('leavePost', postId);\n      socket.off('newComment'); // Remove event listener\n    };\n  }, [postId]);\n  const handleCommentSubmit = (e, parentId = null) => {\n    e.preventDefault();\n    if (newComment.trim() && user) {\n      // Emit the new comment or reply to the server\n      socket.emit('createComment', {\n        postId,\n        content: newComment,\n        parentId,\n        userId: user.userId\n      });\n      setNewComment(''); // Clear the input field\n    } else if (!user) {\n      alert('You must be logged in to comment.');\n    }\n  };\n  const handleLike = commentId => {\n    if (user) {\n      // Emit the like action to the server\n      socket.emit('likeComment', {\n        commentId\n      });\n    } else {\n      alert('You must be logged in to like comments.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment,\n        onReply: handleCommentSubmit,\n        onLike: handleLike,\n        user: user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleCommentSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Write a comment...\",\n        disabled: !user // Disable input if not logged in\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !user,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"MxCDS9ewhkO9e8lz5YjyzEXdntQ=\");\n_c = CommentSection;\nconst Comment = ({\n  comment,\n  onReply,\n  onLike,\n  user\n}) => {\n  _s2();\n  const [showReplyForm, setShowReplyForm] = useState(false);\n  const [replyText, setReplyText] = useState('');\n  const handleReplySubmit = e => {\n    e.preventDefault();\n    if (user) {\n      onReply(e, comment.id); // Pass parent comment ID for reply\n      setReplyText('');\n      setShowReplyForm(false);\n    } else {\n      alert('You must be logged in to reply.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-avatar\",\n      style: {\n        backgroundImage: 'url(\"https://cdn.usegalileo.ai/stability/5af820a1-de05-4a2c-b4f8-aa8978e1544a.png\")'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: comment.author || 'User'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatTimeAgo(comment.createdAt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onLike(comment.id),\n          children: [\"Like \", comment.likes || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowReplyForm(!showReplyForm),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), showReplyForm && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleReplySubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: replyText,\n          onChange: e => setReplyText(e.target.value),\n          placeholder: \"Write a reply...\",\n          disabled: !user // Disable input if not logged in\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !user,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), comment.replies && comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comment.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(Comment, {\n          comment: reply,\n          onReply: onReply,\n          onLike: onLike,\n          user: user\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s2(Comment, \"zpzziMs7b60nLFzcbZXPdqVKslM=\");\n_c2 = Comment;\nfunction formatTimeAgo(dateString) {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInSeconds = Math.floor((now - date) / 1000);\n  if (diffInSeconds < 60) {\n    return 'Just now';\n  } else if (diffInSeconds < 3600) {\n    const minutes = Math.floor(diffInSeconds / 60);\n    return `${minutes} min ago`;\n  } else if (diffInSeconds < 86400) {\n    const hours = Math.floor(diffInSeconds / 3600);\n    return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n  } else {\n    return date.toLocaleDateString(); // This will return the exact date\n  }\n}\nexport default CommentSection;\nvar _c, _c2;\n$RefreshReg$(_c, \"CommentSection\");\n$RefreshReg$(_c2, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","CommentSection","postId","user","_s","comments","setComments","newComment","setNewComment","fetchComments","response","fetch","data","json","error","console","emit","on","comment","prevComments","off","handleCommentSubmit","e","parentId","preventDefault","trim","content","userId","alert","handleLike","commentId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Comment","onReply","onLike","onSubmit","type","value","onChange","target","placeholder","disabled","_c","_s2","showReplyForm","setShowReplyForm","replyText","setReplyText","handleReplySubmit","id","style","backgroundImage","author","formatTimeAgo","createdAt","onClick","likes","replies","length","reply","_c2","dateString","date","Date","now","diffInSeconds","Math","floor","minutes","hours","toLocaleDateString","$RefreshReg$"],"sources":["/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/CommentSection.js"],"sourcesContent":["// CommentSection.js\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './css/CommentSection.css';\n\nconst socket = io('http://localhost:5000'); // Update with your backend URL\n\nconst CommentSection = ({ postId, user }) => {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/comments/${postId}`);\n        const data = await response.json();\n        setComments(data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n\n    fetchComments();\n\n    // Join the post room\n    socket.emit('joinPost', postId);\n\n    // Listen for new comments from the server\n    socket.on('newComment', (comment) => {\n      setComments((prevComments) => [...prevComments, comment]);\n    });\n\n    // Cleanup on unmount\n    return () => {\n      socket.emit('leavePost', postId);\n      socket.off('newComment'); // Remove event listener\n    };\n  }, [postId]);\n\n  const handleCommentSubmit = (e, parentId = null) => {\n    e.preventDefault();\n    if (newComment.trim() && user) {\n      // Emit the new comment or reply to the server\n      socket.emit('createComment', { postId, content: newComment, parentId, userId: user.userId });\n      setNewComment(''); // Clear the input field\n    } else if (!user) {\n      alert('You must be logged in to comment.');\n    }\n  };\n\n  const handleLike = (commentId) => {\n    if (user) {\n      // Emit the like action to the server\n      socket.emit('likeComment', { commentId });\n    } else {\n      alert('You must be logged in to like comments.');\n    }\n  };\n\n  return (\n    <div className=\"comment-section\">\n      <h2>Comments</h2>\n      <ul>\n        {comments.map((comment, index) => (\n          <Comment\n            key={index}\n            comment={comment}\n            onReply={handleCommentSubmit}\n            onLike={handleLike}\n            user={user}\n          />\n        ))}\n      </ul>\n      <form onSubmit={(e) => handleCommentSubmit(e)}>\n        <input\n          type=\"text\"\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n          placeholder=\"Write a comment...\"\n          disabled={!user} // Disable input if not logged in\n        />\n        <button type=\"submit\" disabled={!user}>Post</button> {/* Disable button if not logged in */}\n      </form>\n    </div>\n  );\n};\n\nconst Comment = ({ comment, onReply, onLike, user }) => {\n  const [showReplyForm, setShowReplyForm] = useState(false);\n  const [replyText, setReplyText] = useState('');\n\n  const handleReplySubmit = (e) => {\n    e.preventDefault();\n    if (user) {\n      onReply(e, comment.id); // Pass parent comment ID for reply\n      setReplyText('');\n      setShowReplyForm(false);\n    } else {\n      alert('You must be logged in to reply.');\n    }\n  };\n\n  return (\n    <li>\n      <div className=\"comment-avatar\" style={{ backgroundImage: 'url(\"https://cdn.usegalileo.ai/stability/5af820a1-de05-4a2c-b4f8-aa8978e1544a.png\")' }}></div>\n      <div className=\"comment-content\">\n        <strong>{comment.author || 'User'}</strong> <span>{formatTimeAgo(comment.createdAt)}</span>\n        <p>{comment.content}</p>\n        <div className=\"comment-actions\">\n          <button onClick={() => onLike(comment.id)}>Like {comment.likes || 0}</button>\n          <button onClick={() => setShowReplyForm(!showReplyForm)}>Reply</button>\n        </div>\n        {showReplyForm && (\n          <form onSubmit={handleReplySubmit}>\n            <input\n              type=\"text\"\n              value={replyText}\n              onChange={(e) => setReplyText(e.target.value)}\n              placeholder=\"Write a reply...\"\n              disabled={!user} // Disable input if not logged in\n            />\n            <button type=\"submit\" disabled={!user}>Post</button> {/* Disable button if not logged in */}\n          </form>\n        )}\n        {comment.replies && comment.replies.length > 0 && (\n          <ul>\n            {comment.replies.map((reply, index) => (\n              <Comment\n                key={index}\n                comment={reply}\n                onReply={onReply}\n                onLike={onLike}\n                user={user}\n              />\n            ))}\n          </ul>\n        )}\n      </div>\n    </li>\n  );\n};\n\nfunction formatTimeAgo(dateString) {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInSeconds = Math.floor((now - date) / 1000);\n\n  if (diffInSeconds < 60) {\n    return 'Just now';\n  } else if (diffInSeconds < 3600) {\n    const minutes = Math.floor(diffInSeconds / 60);\n    return `${minutes} min ago`;\n  } else if (diffInSeconds < 86400) {\n    const hours = Math.floor(diffInSeconds / 3600);\n    return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n  } else {\n    return date.toLocaleDateString(); // This will return the exact date\n  }\n}\n\nexport default CommentSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}