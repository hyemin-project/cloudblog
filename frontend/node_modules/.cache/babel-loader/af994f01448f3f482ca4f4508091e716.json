{"ast":null,"code":"var _jsxFileName = \"/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport CommentItem from './CommentItem';\nimport './css/CommentSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Update with your backend URL\n\nconst CommentSection = ({\n  postId,\n  user\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/comments/${postId}`);\n        const data = await response.json();\n\n        // Ensure each comment has a likedUsers array\n        const processedComments = data.map(comment => ({\n          ...comment,\n          likedUsers: Array.isArray(comment.likedUsers) ? comment.likedUsers : []\n        }));\n        setComments(processedComments);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchComments();\n    socket.emit('joinPost', postId);\n    socket.on('newComment', comment => {\n      // Ensure new comments also have a likedUsers array\n      comment.likedUsers = Array.isArray(comment.likedUsers) ? comment.likedUsers : [];\n      setComments(prevComments => [...prevComments, comment]);\n    });\n    return () => {\n      socket.emit('leavePost', postId);\n      socket.off('newComment');\n    };\n  }, [postId]);\n  const handleCommentSubmit = (e, parentId = null) => {\n    e.preventDefault();\n    if (newComment.trim()) {\n      socket.emit('createComment', {\n        postId,\n        content: newComment,\n        parentId,\n        userId: user === null || user === void 0 ? void 0 : user.userId\n      });\n      setNewComment('');\n    }\n  };\n  const handleReply = (parentId, replyText) => {\n    if (replyText.trim()) {\n      socket.emit('createComment', {\n        postId,\n        content: replyText,\n        parentId,\n        userId: user === null || user === void 0 ? void 0 : user.userId\n      });\n    }\n  };\n  const handleLike = (commentId, isLiked) => {\n    if (!user) {\n      alert('Please log in to like a comment.');\n      return;\n    }\n    socket.emit('likeComment', {\n      commentId,\n      isLiked\n    });\n    setComments(prevComments => prevComments.map(comment => comment.id === commentId ? {\n      ...comment,\n      likes: isLiked ? comment.likes - 1 : comment.likes + 1,\n      likedUsers: isLiked ? comment.likedUsers.filter(id => id !== user.userId) : [...comment.likedUsers, user.userId]\n    } : comment));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.length > 0 ? comments.map((comment, index) => /*#__PURE__*/_jsxDEV(CommentItem, {\n        comment: comment,\n        onReply: handleReply,\n        onLike: handleLike,\n        user: user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Write a comment...\",\n        disabled: !user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !user,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"MxCDS9ewhkO9e8lz5YjyzEXdntQ=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","io","CommentItem","jsxDEV","_jsxDEV","socket","CommentSection","postId","user","_s","comments","setComments","newComment","setNewComment","fetchComments","response","fetch","data","json","processedComments","map","comment","likedUsers","Array","isArray","error","console","emit","on","prevComments","off","handleCommentSubmit","e","parentId","preventDefault","trim","content","userId","handleReply","replyText","handleLike","commentId","isLiked","alert","id","likes","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","onReply","onLike","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport CommentItem from './CommentItem';\nimport './css/CommentSection.css';\n\nconst socket = io('http://localhost:5000'); // Update with your backend URL\n\nconst CommentSection = ({ postId, user }) => {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/comments/${postId}`);\n        const data = await response.json();\n\n        // Ensure each comment has a likedUsers array\n        const processedComments = data.map(comment => ({\n          ...comment,\n          likedUsers: Array.isArray(comment.likedUsers) ? comment.likedUsers : [], \n        }));\n\n        setComments(processedComments);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n\n    fetchComments();\n\n    socket.emit('joinPost', postId);\n\n    socket.on('newComment', (comment) => {\n      // Ensure new comments also have a likedUsers array\n      comment.likedUsers = Array.isArray(comment.likedUsers) ? comment.likedUsers : [];\n      setComments((prevComments) => [...prevComments, comment]);\n    });\n\n    return () => {\n      socket.emit('leavePost', postId);\n      socket.off('newComment');\n    };\n  }, [postId]);\n\n  const handleCommentSubmit = (e, parentId = null) => {\n    e.preventDefault();\n    if (newComment.trim()) {\n      socket.emit('createComment', {\n        postId,\n        content: newComment,\n        parentId,\n        userId: user?.userId,\n      });\n      setNewComment('');\n    }\n  };\n\n  const handleReply = (parentId, replyText) => {\n    if (replyText.trim()) {\n      socket.emit('createComment', { postId, content: replyText, parentId, userId: user?.userId });\n    }\n  };\n\n  const handleLike = (commentId, isLiked) => {\n    if (!user) {\n      alert('Please log in to like a comment.');\n      return;\n    }\n\n    socket.emit('likeComment', { commentId, isLiked });\n\n    setComments((prevComments) =>\n      prevComments.map((comment) =>\n        comment.id === commentId\n          ? {\n              ...comment,\n              likes: isLiked ? comment.likes - 1 : comment.likes + 1,\n              likedUsers: isLiked\n                ? comment.likedUsers.filter((id) => id !== user.userId)\n                : [...comment.likedUsers, user.userId],\n            }\n          : comment\n      )\n    );\n  };\n\n  return (\n    <div className=\"comment-section\">\n      <h2>Comments</h2>\n      <ul>\n        {comments.length > 0 ? (\n          comments.map((comment, index) => (\n            <CommentItem\n              key={index}\n              comment={comment}\n              onReply={handleReply}\n              onLike={handleLike}\n              user={user}\n            />\n          ))\n        ) : (\n          <p>No comments available.</p>\n        )}\n      </ul>\n      <form onSubmit={handleCommentSubmit}>\n        <input\n          type=\"text\"\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n          placeholder=\"Write a comment...\"\n          disabled={!user}\n        />\n        <button type=\"submit\" disabled={!user}>Post</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}