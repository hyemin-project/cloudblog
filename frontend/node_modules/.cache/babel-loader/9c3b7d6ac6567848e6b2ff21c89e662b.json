{"ast":null,"code":"var _jsxFileName = \"/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport CommentItem from './CommentItem';\nimport './css/CommentSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Update with your backend URL\n\nconst CommentSection = ({\n  postId,\n  user\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/comments/${postId}`);\n        const data = await response.json();\n        setComments(data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      } finally {\n        setLoading(false); // Set loading to false once comments are fetched\n      }\n    };\n    fetchComments();\n    socket.emit('joinPost', postId);\n    socket.on('newComment', comment => {\n      setComments(prevComments => [...prevComments, comment]);\n    });\n    return () => {\n      socket.emit('leavePost', postId);\n      socket.off('newComment');\n    };\n  }, [postId]);\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n    if (newComment.trim()) {\n      socket.emit('createComment', {\n        postId,\n        content: newComment,\n        parentId: null,\n        // It's a new comment, not a reply\n        userId: user === null || user === void 0 ? void 0 : user.userId\n      });\n      setNewComment('');\n    }\n  };\n  const handleReply = (parentId, replyText) => {\n    if (replyText.trim()) {\n      socket.emit('createComment', {\n        postId,\n        content: replyText,\n        parentId,\n        userId: user === null || user === void 0 ? void 0 : user.userId\n      });\n    }\n  };\n  const handleLike = commentId => {\n    if (!user) {\n      alert('Please log in to like a comment.');\n      return;\n    }\n    socket.emit('likeComment', {\n      commentId\n    });\n    setComments(prevComments => prevComments.map(comment => comment.id === commentId ? {\n      ...comment,\n      likes: comment.likes + 1\n    } : comment));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this); // Show a loading message while comments are being fetched\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.length > 0 ? comments.map((comment, index) => /*#__PURE__*/_jsxDEV(CommentItem, {\n        comment: comment,\n        onReply: handleReply,\n        onLike: handleLike,\n        user: user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Write a comment...\",\n        disabled: !user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !user,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), !user && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to post a comment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"1obi0pxhbaYEags6kawTWbRgxBE=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","io","CommentItem","jsxDEV","_jsxDEV","socket","CommentSection","postId","user","_s","comments","setComments","newComment","setNewComment","loading","setLoading","fetchComments","response","fetch","data","json","error","console","emit","on","comment","prevComments","off","handleCommentSubmit","e","preventDefault","trim","content","parentId","userId","handleReply","replyText","handleLike","commentId","alert","map","id","likes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","index","onReply","onLike","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport CommentItem from './CommentItem';\nimport './css/CommentSection.css';\n\nconst socket = io('http://localhost:5000'); // Update with your backend URL\n\nconst CommentSection = ({ postId, user }) => {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/comments/${postId}`);\n        const data = await response.json();\n        setComments(data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      } finally {\n        setLoading(false); // Set loading to false once comments are fetched\n      }\n    };\n\n    fetchComments();\n\n    socket.emit('joinPost', postId);\n\n    socket.on('newComment', (comment) => {\n      setComments((prevComments) => [...prevComments, comment]);\n    });\n\n    return () => {\n      socket.emit('leavePost', postId);\n      socket.off('newComment');\n    };\n  }, [postId]);\n\n  const handleCommentSubmit = (e) => {\n    e.preventDefault();\n    if (newComment.trim()) {\n      socket.emit('createComment', {\n        postId,\n        content: newComment,\n        parentId: null, // It's a new comment, not a reply\n        userId: user?.userId,\n      });\n      setNewComment('');\n    }\n  };\n\n  const handleReply = (parentId, replyText) => {\n    if (replyText.trim()) {\n      socket.emit('createComment', { postId, content: replyText, parentId, userId: user?.userId });\n    }\n  };\n\n  const handleLike = (commentId) => {\n    if (!user) {\n      alert('Please log in to like a comment.');\n      return;\n    }\n\n    socket.emit('likeComment', { commentId });\n\n    setComments((prevComments) =>\n      prevComments.map((comment) =>\n        comment.id === commentId ? { ...comment, likes: comment.likes + 1 } : comment\n      )\n    );\n  };\n\n  if (loading) {\n    return <p>Loading comments...</p>; // Show a loading message while comments are being fetched\n  }\n\n  return (\n    <div className=\"comment-section\">\n      <h2>Comments</h2>\n      <ul>\n        {comments.length > 0 ? (\n          comments.map((comment, index) => (\n            <CommentItem\n              key={index}\n              comment={comment}\n              onReply={handleReply}\n              onLike={handleLike}\n              user={user}\n            />\n          ))\n        ) : (\n          <p>No comments available.</p>\n        )}\n      </ul>\n      <form onSubmit={handleCommentSubmit}>\n        <input\n          type=\"text\"\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n          placeholder=\"Write a comment...\"\n          disabled={!user}\n        />\n        <button type=\"submit\" disabled={!user}>Post</button>\n      </form>\n      {!user && <p>Please log in to post a comment.</p>}\n    </div>\n  );\n};\n\nexport default CommentSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}