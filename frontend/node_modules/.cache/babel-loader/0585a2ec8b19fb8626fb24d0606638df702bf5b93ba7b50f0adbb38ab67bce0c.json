{"ast":null,"code":"var _jsxFileName = \"/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/NewPostPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './css/PostForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPostPage = () => {\n  _s();\n  const [post, setPost] = useState({\n    title: '',\n    content: '',\n    status: 'Draft'\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  const [scheduledDate, setScheduledDate] = useState(new Date());\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPost({\n      ...post,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n    try {\n      const response = await fetch('http://localhost:5000/api/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}` // Assuming you store the token in localStorage\n        },\n        body: JSON.stringify(post)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create post');\n      }\n      const data = await response.json();\n      console.log('Post created:', data);\n      navigate('/admin'); // Redirect to admin page or wherever you want after successful creation\n    } catch (error) {\n      console.error('Error creating post:', error);\n      setError('Failed to create post. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-form-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          value: post.title,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          name: \"content\",\n          value: post.content,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"status\",\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"status\",\n          name: \"status\",\n          value: post.status,\n          onChange: handleInputChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Draft\",\n            children: \"Draft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Published\",\n            children: \"Published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Scheduled\",\n            children: \"Scheduled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), post.status === 'Scheduled' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"scheduledDate\",\n          children: \"Scheduled Publish Date (Your Local Time):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: scheduledDate,\n          onChange: handleDateChange,\n          showTimeSelect: true,\n          timeFormat: \"HH:mm\",\n          timeIntervals: 15,\n          timeCaption: \"Time\",\n          dateFormat: \"MMMM d, yyyy HH:mm\",\n          className: \"form-control\",\n          minDate: new Date(),\n          \"aria-label\": \"Select date and time for scheduled publishing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text text-muted\",\n          children: \"Select the future date and time when you want this post to be automatically published.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPostPage, \"mD3I66wBry3TRHA9nzCyRhmEcaM=\", false, function () {\n  return [useNavigate];\n});\n_c = NewPostPage;\nexport default NewPostPage;\nvar _c;\n$RefreshReg$(_c, \"NewPostPage\");","map":{"version":3,"names":["React","useState","useNavigate","DatePicker","jsxDEV","_jsxDEV","NewPostPage","_s","post","setPost","title","content","status","error","setError","navigate","isLoading","setIsLoading","scheduledDate","setScheduledDate","Date","handleInputChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","ok","Error","data","json","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","selected","handleDateChange","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","minDate","_c","$RefreshReg$"],"sources":["/Users/hyemin/Documents/Projects/cloud-native-blog/frontend/src/components/NewPostPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './css/PostForm.css';\n\nconst NewPostPage = () => {\n  const [post, setPost] = useState({ title: '', content: '', status: 'Draft' });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  const [scheduledDate, setScheduledDate] = useState(new Date());\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setPost({ ...post, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n      e.preventDefault();\n      setIsLoading(true);\n      setError('');\n  \n      try {\n        const response = await fetch('http://localhost:5000/api/posts', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}` // Assuming you store the token in localStorage\n          },\n          body: JSON.stringify(post)\n        });\n  \n        if (!response.ok) {\n          throw new Error('Failed to create post');\n        }\n  \n        const data = await response.json();\n        console.log('Post created:', data);\n        navigate('/admin'); // Redirect to admin page or wherever you want after successful creation\n      } catch (error) {\n        console.error('Error creating post:', error);\n        setError('Failed to create post. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n  };\n\n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"post-form-page\">\n      <h1>Create New Post</h1>\n      <form className=\"post-form\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={post.title}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"content\">Content:</label>\n          <textarea\n            id=\"content\"\n            name=\"content\"\n            value={post.content}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"status\">Status:</label>\n          <select\n            id=\"status\"\n            name=\"status\"\n            value={post.status}\n            onChange={handleInputChange}\n            required\n          >\n            <option value=\"Draft\">Draft</option>\n            <option value=\"Published\">Published</option>\n            <option value=\"Scheduled\">Scheduled</option>\n          </select>\n        </div>\n        {post.status === 'Scheduled' && (\n          <div className=\"form-group\">\n            <label htmlFor=\"scheduledDate\">Scheduled Publish Date (Your Local Time):</label>\n          <DatePicker\n            selected={scheduledDate}\n            onChange={handleDateChange}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={15}\n            timeCaption=\"Time\"\n            dateFormat=\"MMMM d, yyyy HH:mm\"\n            className=\"form-control\"\n            minDate={new Date()}\n            aria-label=\"Select date and time for scheduled publishing\"\n          />\n          <div></div>\n          <small className=\"form-text text-muted\">\n            Select the future date and time when you want this post to be automatically published.\n          </small>\n          {error && <div className=\"error-message\">{error}</div>}\n          </div>\n        )}\n        <button type=\"submit\" className=\"submit-button\">Create Post</button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewPostPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}